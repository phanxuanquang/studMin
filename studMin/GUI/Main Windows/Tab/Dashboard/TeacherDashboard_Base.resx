<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Search_Button.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zkjSDwAAAABJRU5ErkJggg==
</value>
  </data>
</root>